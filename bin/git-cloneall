#!/bin/bash

#
# Script to clone all repositories in a Git host
# Supports Github, Gitlab SaaS, Gitlab self-hosted
#

function checkargs {
    num_args=$1
    expected_args=$2
    msg=$3
    if (( $num_args < $expected_args )) ;
    then
        echo $msg
        echo "Usage:"
        echo "git-cloneall <profile> <group/org ID> <optional Gitlab host>"
        exit $expected_args
    fi
}

function cloneall_gitlab {
    source "$HOME/.env"
    PROFILE=$1
    GROUP=$2
    GL_HOST=$3
    DIR=`basename $PWD`
    eval PAT=\$${1}_PAT
    echo "Cloning all repositories for Gitlab group $DIR[$GROUP] on $GL_HOST"

    #clone repos in group
    for project_id in $(curl -s --header "PRIVATE-TOKEN: $PAT" "https://$GL_HOST/api/v4/groups/$GROUP/projects?per_page=100" | jq -r ".[].id");
    do
        project_path=$(curl -s --header "PRIVATE-TOKEN: $PAT" "https://$GL_HOST/api/v4/projects/$project_id" | jq -r ".path");
        if [ ! -d $project_path ]
        then
            project_ssh_url=$(curl -s --header "PRIVATE-TOKEN: $PAT" "https://$GL_HOST/api/v4/projects/$project_id" | jq -r ".http_url_to_repo");
            echo "cloning $project_path"
            git clone $project_ssh_url $project_path;
        else
            echo "updating $project_path"
            cd $project_path
            git remote update
            git pull --ff-only
            cd -
        fi
    done

    #recurse for groups
    for sub_group_id in $(curl -s --header "PRIVATE-TOKEN: $PAT" "https://$GL_HOST/api/v4/groups/$GROUP/subgroups?per_page=100" | jq -r ".[].id");
    do
        sub_group_path=$(curl -s --header "PRIVATE-TOKEN: $PAT" "https://$GL_HOST/api/v4/groups/$sub_group_id" | jq -r ".path");
        if [ ! -d $sub_group_path ]
        then
            mkdir $sub_group_path
        fi
        cd $sub_group_path
        cloneall_gitlab $PROFILE $sub_group_id $GL_HOST
        cd ..
    done
    
}

function cloneall_github {
    GHORG=$1
    echo Cloning all repositories in org $GHORG
    curl "https://api.github.com/orgs/$GHORG/repos?per_page=1000" | grep -o 'git@[^"]*' | xargs -L1 git clone    
}

checkargs $# 1 "First arg must be a profile (GH, GL)"
PROFILE=$1
if [[ $PROFILE == GH* ]]
then
    checkargs $# 2 "Second arg must be a Github org ID"
    cloneall_github $2
elif [[ $PROFILE == GL* ]]
then
    checkargs $# 2 "Second arg must be a Gitlab group ID"
    cloneall_gitlab $PROFILE $2 ${3:-"gitlab.com"}
else
    echo "Failed to execute any clone with profile '$PROFILE'"
fi



